name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.22.2

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        pip install flet-core
        pip install flet-runtime
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    - name: Linux Setup
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
    - name: Build Linux
      run: |
        flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
    - uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/linux/x64/release/bundle

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        pip install flet-core
        pip install flet-runtime
        if (Test-Path -Path "requirements.txt") { pip install -r requirements.txt }
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    - name: Build Windows
      run: |
        flet build windows --verbose --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION
    - uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/runner/Release

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        pip install flet-core
        pip install flet-runtime
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    - name: Build macOS
      run: |
        flet build macos --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
    - uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/macos/Build/Products/Release

  build-mobile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        pip install flet-core
        pip install flet-runtime
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    - name: Build APK
      run: |
        flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
    - name: Build AAB
      run: |
        flet build aab --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
    - uses: actions/upload-artifact@v4
      with:
        name: android-builds
        path: |
          build/app/outputs/flutter-apk
          build/app/outputs/bundle/release
